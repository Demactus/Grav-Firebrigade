let productsList,products=[],cart=[];function extractProducts(t){let e=[];for(let a in t){let i=t[a],r=getTrueSizes(i.size),c="";i.productImage&&(c=i.productImage);let d={id:a,name:i.name,price:i.price,sizes:r,imageName:c};e.push(d)}return e}function getTrueSizes(t){return Object.keys(t).filter(e=>t[e])}document.addEventListener("DOMContentLoaded",function(){let t=document.querySelector(".product-list");products=extractProducts(productsList=JSON.parse(t.getAttribute("data-list"))),console.log(products);let e=products.map(t=>`<div class="product-card">
            <img src="{{ url('image://product-images//')}}/${t.imageName}"/>
            <h2 class="product-name">${t.name}</h2>
            <strong>${t.price}€</strong>
            <select class="product-size" id="size-${t.id}">
                ${t.sizes.map(t=>`<option value="${t}">${t}</option>`).join("")}
            </select>
            <div class="button product-btn">
                <a class="addtocart" id="${t.id}">
                    <div class="add">Add to Cart</div>
                    <div class="added">Added!</div>
                </a>
            </div>
        </div>`),a=document.querySelector(".result");function i(){let t=cart.map(t=>`<div class="cart-item">
                <h3>${t.name} - ${t.size}</h3>
                <div class="cart-detail">
                    <div class="mid">
                        <button data-id="${t.id}" data-size="${t.size}">-</button>
                        <p>${t.quantity}</p>
                        <button data-id="${t.id}" data-size="${t.size}">+</button>
                    </div>
                    <p>${t.price}€</p>
                    <button data-id="${t.id}" data-size="${t.size}" class="cart-product"><i class="fa-solid fa-trash"></i></button>
                </div>
            </div>`),e=document.querySelector(".cart-items");e.innerHTML=t.join(""),function t(){let e=document.querySelectorAll(".cart-item button");e.forEach(t=>{t.addEventListener("click",function(t){let e=t.target.dataset.id,a=t.target.dataset.size;"-"===t.target.textContent?function t(e,a){for(let c=0;c<cart.length;c++)cart[c].id==e&&cart[c].size===a&&cart[c].quantity>1&&(cart[c].quantity-=1);i(),r(cart)}(e,a):"+"===t.target.textContent?c(e,a):t.target.classList.contains("cart-product")&&function t(e,a){for(let c=0;c<cart.length;c++)if(cart[c].id==e&&cart[c].size===a){cart.splice(c,1);break}i(),r(cart)}(e,a)})})}()}function r(t){let{totalItem:e,cartTotal:a}=t.reduce((t,e)=>{let a=parseFloat(e.price.replace(",","."));return t.cartTotal+=a*e.quantity,t.totalItem+=e.quantity,t},{totalItem:0,cartTotal:0}),i=document.querySelector(".noOfItems");i.innerHTML=`${e} items`;let r=document.querySelector(".total");r.innerHTML=`${a.toFixed(2)}€`}function c(t,e){for(let a=0;a<cart.length;a++)cart[a]&&cart[a].id==t&&cart[a].size===e&&(cart[a].quantity+=1);i(),r(cart)}a.innerHTML=e.join(""),function t(){let e=document.querySelectorAll(".addtocart");e.forEach(t=>{t.addEventListener("click",function(t){$(this).addClass("active"),setTimeout(function(){$(".addtocart").removeClass("active")},1e3);let e=this.id,a=document.getElementById(`size-${e}`);if(a){let d=a.value;(function t(e,a,d){let s=e.find(t=>t.id==a),n=cart.find(t=>t.id==a&&t.size===d);n?c(a,d):cart.unshift({...s,size:d,quantity:1}),i(),r(cart)})(products,e,d)}else console.error(`Size select element not found for product ID: ${e}`)})})}()});